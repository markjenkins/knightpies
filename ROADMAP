0.5.0
 - Fix test suite compatibility with stage0 Release_0.3.0 and Release_0.4.0
   and update stage0 git submodule reference
 - Implement and test instructions needed to execute cc_knight-native.s
   ADDI
   CALL
   CMPJUMPI.E
   CMPJUMPI.L
   CMPSKIP.E
   CMPSKIP_LE
   CMPSKIP.NE
   DIV
   DIVIDE
   LOADR
   LOADR32
   MULU
   PUSH8
   STORER32
   STOREX8
 - Provide shortcut cc_knight.py

0.5.5
 - Implement and test instructions needed to execute cc_knight-posix.s
 - Add --posix support to shortcut cc_knight.py

0.6.0
 - Implement and test all Knight instructions emmited by M2 Planet, including
   when it compiles itself to Knight, use its test suite

0.6.1
 - Add bootstrap_M2_planet_knight.py and shortcut M2_planet_knight.py

0.6.2
 - Add bootstrap_hex2_linker_knight.py (build M2-Planet/test/test22/hex2_linker)
 - Add shortcut hex2_linker_knight.py

0.6.3
 - Add bootstrap_M1_knight.py (build M2-Planet/test/test23/M1-macro.c)
 - Add shortcut M1_knight.py (runs M2-Planet/test/test23/M1-macro.c)

0.7.0
 - Implement and test support in hex1tobin.py and hex2tobin.py
   when architechure is x86 (32 bit), compare with behavior of
   hex2_linker_knight.py (wrapper for M2-Planet/test/test22/hex2_linker)

0.7.1
 - Implement and test support in M1.py when architechure is
   x86 (32 bit), compare with behavior of
   M1_knight.py (wrapper for M2-Planet/test/test23/M1-macro.c)

0.7.5
 - Implement and test instructions needed to execute stage2/cc_x86.s
 - Provide shortcuts cc_x86.py, bootstrap_M2_planet_x86.py

0.8
 - Implement and test instructed needed to execute other cc_*.s
 - Provide cc_* and bootstrap_M2_planet_*.py shorcuts for other archs

0.9
 - Support any remaining instructions used by other stage0 .s files

1.0
 - Implement and test all knightvm instructions found in
   stage0/vm_instructions.c

Other TODOS sometime prior to 1.0
 * Adding substantial comments, especially for the meta-programming
 * Convert further to a pseudo functional style so get_args_for_*OP functions can go away
 * Separate directly executable Python files from the rest, move library modules to a knightpy package
 * Adopting a compliant file system layout that could make this mergable with stage0
 * Performance test premature optimizations
 * Test Python compatibility

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.  This file is offered as-is,
without any warranty.
